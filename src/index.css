@tailwind base;
@tailwind components;
@tailwind utilities;

/* Define a keyframes animation for blinking */
@keyframes blink {
  10% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

/* Apply the animation to the button */
.blinking-text {
  animation: blink 2s infinite; /* Adjust the duration as needed */
}

@layer base {
  .rahil {
    @apply text-4xl;
  }
}

input::placeholder {
  /* @apply max-sm:text-[9px] max-sm:text-center md:text-center; */
}

.lgh {
  @apply lg:text-4xl max-sm:text-2xl md:text-2xl font-bold text-center;
}
.lgp {
  @apply font-normal text-center lg:w-[990px] max-sm:text-base;
}

nav ul li {
  font-size: 12px;
  font-weight: 400;
  margin-top: 15px;
}

.navbarbuttons {
  position: relative;
  top: -6px;
}

/* ul li{
  @apply font-bold
} */
.bdd {
  @apply text-[18px] font-bold;
}
.bdm {
  @apply font-normal text-center lg:w-[990px] max-sm:text-base;
}

.bd ul li {
  @apply font-bold;
}

.list ul li {
  font-size: 20px;
  font-weight: 400;
  margin-top: 20px;
}

.lg {
  @apply lg:w-[541px] lg:h-[239px];
}

/* .sm{
  @apply  
} */

/* since nested groupes are not supported we have to use 
     regular css for the nested dropdowns 
  */
li > ul {
  transform: translatex(100%) scale(0);
}
li:hover > ul {
  transform: translatex(101%) scale(1);
}
li > button svg {
  transform: rotate(-90deg);
}
li:hover > button svg {
  transform: rotate(-270deg);
}

/* Below styles fake what can be achieved with the tailwind config
     you need to add the group-hover variant to scale and define your custom
     min width style.
  	 See https://codesandbox.io/s/tailwindcss-multilevel-dropdown-y91j7?file=/index.html
  	 for implementation with config file
  */
.group:hover .group-hover\:scale-100 {
  transform: scale(1);
}
.group:hover .group-hover\:-rotate-180 {
  transform: rotate(180deg);
}
.scale-0 {
  transform: scale(0);
}
.min-w-32 {
  min-width: 8rem;
}

.page-description p {
  background-color: aqua;
}

.sch::-webkit-scrollbar {
  display: none;
}
.col-span-2::-webkit-scrollbar {
  display: none;
}

.cursor {
  cursor: pointer;
}

.typing-text {
  border-right: 2px solid black;
  white-space: nowrap;
  overflow: hidden;
  animation: typing 4s steps(40, end), blink-caret 0.75s step-end infinite;
}

/* Typing effect */
@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

/* Cursor animations */
@keyframes blink-caret {
  from,
  to {
    border-color: transparent;
  }
  50% {
    border-color: black;
  }
}

.spinner-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

.loader-container {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh; /* This makes the container take the full viewport height */
}

.loader {
  border: 5px solid #f3f3f3; /* Light grey */
  border-top: 5px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 2s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes riseUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes widthexpand {
  from {
    transform: translatex(100%);
    opacity: 0;
  }
  to {
    transform: translatex(0);
    opacity: 1;
  }
}

@keyframes slideBackground {
  0%,
  100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

.animated-gradient-div {
  width: 100%;
  /* height: 100vh; Use 100% of the viewport height */
  background-size: 200% 200%;
  background-image: linear-gradient(
    to right,
    rgb(255, 0, 0),
    /* Red */ rgb(255, 255, 0),
    /* Yellow */ rgb(0, 255, 0),
    /* Green */ rgb(0, 255, 255),
    /* Cyan */ rgb(0, 0, 255),
    /* Blue */ rgb(255, 0, 255),
    /* Magenta */ rgb(255, 0, 0)
  ); /* Red */
  animation: slideBackground 10s ease infinite;
}


